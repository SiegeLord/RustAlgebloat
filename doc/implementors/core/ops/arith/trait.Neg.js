(function() {var implementors = {};
implementors["algebloat"] = [{"text":"impl&lt;TA:&nbsp;MatrixRawGet + Clone + MatrixShape, TO:&nbsp;UnOp + Clone&gt; Neg for MatrixUnOp&lt;TA, TO&gt;","synthetic":false,"types":[]},{"text":"impl&lt;TA:&nbsp;MatrixRawGet + Clone + MatrixShape, TB:&nbsp;Clone, TO:&nbsp;BinOp + Clone&gt; Neg for MatrixBinOp&lt;TA, TB, TO&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'l&gt; Neg for &amp;'l Matrix","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;MatrixShape + Clone&gt; Neg for RowAccessor&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;MatrixShape + Clone&gt; Neg for ColumnAccessor&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;MatrixShape + Clone&gt; Neg for Transposer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;MatrixShape + Clone&gt; Neg for View&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;MatrixShape + Clone&gt; Neg for Slice&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;MatrixShape + Clone&gt; Neg for Reshape&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1:&nbsp;MatrixShape + Clone, T2:&nbsp;MatrixShape + Clone&gt; Neg for MatrixMul&lt;T1, T2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1:&nbsp;MatrixShape + Clone, T2:&nbsp;MatrixShape + Clone&gt; Neg for HStack&lt;T1, T2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1:&nbsp;MatrixShape + Clone, T2:&nbsp;MatrixShape + Clone&gt; Neg for VStack&lt;T1, T2&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()